// Code generated by protoc-gen-httpgo. DO NOT EDIT.
// source: proto/example2.proto

package proto

import (
	context "context"
	json "encoding/json"
	fmt "fmt"
	somepackage "github.com/MUlt1mate/protoc-gen-httpgo/example/proto/somepackage"
	fasthttp "github.com/valyala/fasthttp"
)

var _ ServiceName2HTTPGoService = &ServiceName2HTTPGoClient{}

type ServiceName2HTTPGoClient struct {
	cl   *fasthttp.Client
	host string
}

func GetServiceName2HTTPGoClient(_ context.Context, cl *fasthttp.Client, host string) (*ServiceName2HTTPGoClient, error) {
	return &ServiceName2HTTPGoClient{
		cl:   cl,
		host: host,
	}, nil
}

func (p *ServiceName2HTTPGoClient) Imports(ctx context.Context, request *somepackage.SomeCustomMsg1) (resp *somepackage.SomeCustomMsg2, err error) {
	var body []byte
	body, err = json.Marshal(request)
	if err != nil {
		return
	}
	req := &fasthttp.Request{}
	req.SetBody(body)
	req.SetRequestURI(p.host + fmt.Sprintf("/v1/test/imports"))
	req.Header.SetMethod("POST")
	reqResp := &fasthttp.Response{}
	if err = p.cl.Do(req, reqResp); err != nil {
		return nil, err
	}
	resp = &somepackage.SomeCustomMsg2{}
	err = json.Unmarshal(reqResp.Body(), resp)
	return resp, err
}

var _ SecondServiceName2HTTPGoService = &SecondServiceName2HTTPGoClient{}

type SecondServiceName2HTTPGoClient struct {
	cl   *fasthttp.Client
	host string
}

func GetSecondServiceName2HTTPGoClient(_ context.Context, cl *fasthttp.Client, host string) (*SecondServiceName2HTTPGoClient, error) {
	return &SecondServiceName2HTTPGoClient{
		cl:   cl,
		host: host,
	}, nil
}

func (p *SecondServiceName2HTTPGoClient) Imports(ctx context.Context, request *somepackage.SomeCustomMsg1) (resp *somepackage.SomeCustomMsg2, err error) {
	var body []byte
	body, err = json.Marshal(request)
	if err != nil {
		return
	}
	req := &fasthttp.Request{}
	req.SetBody(body)
	req.SetRequestURI(p.host + fmt.Sprintf("/v1/test/imports"))
	req.Header.SetMethod("POST")
	reqResp := &fasthttp.Response{}
	if err = p.cl.Do(req, reqResp); err != nil {
		return nil, err
	}
	resp = &somepackage.SomeCustomMsg2{}
	err = json.Unmarshal(reqResp.Body(), resp)
	return resp, err
}
