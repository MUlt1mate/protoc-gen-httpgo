// Code generated by protoc-gen-httpgo. DO NOT EDIT.
// source: proto/example.proto

package proto

import (
	context "context"
	json "encoding/json"
	fmt "fmt"
	fasthttp "github.com/valyala/fasthttp"
)

var _ ServiceNameHTTPGoService = &ServiceNameHTTPGoClient{}

type ServiceNameHTTPGoClient struct {
	cl   *fasthttp.Client
	host string
}

func GetServiceNameHTTPGoClient(_ context.Context, cl *fasthttp.Client, host string) (*ServiceNameHTTPGoClient, error) {
	return &ServiceNameHTTPGoClient{
		cl:   cl,
		host: host,
	}, nil
}

func (p *ServiceNameHTTPGoClient) RPCName(ctx context.Context, request *InputMsgName) (resp *OutputMsgName, err error) {
	body, _ := json.Marshal(request)
	req := &fasthttp.Request{}
	req.SetBody(body)
	req.SetRequestURI(p.host + fmt.Sprintf("/v1/test/%s/%d", request.StringArgument, request.Int64Argument))
	req.Header.SetMethod("POST")
	reqResp := &fasthttp.Response{}
	if err = p.cl.Do(req, reqResp); err != nil {
		return nil, err
	}
	resp = &OutputMsgName{}
	err = json.Unmarshal(reqResp.Body(), resp)
	return resp, err
}
func (p *ServiceNameHTTPGoClient) AllTypesTest(ctx context.Context, request *AllTypesMsg) (resp *AllTypesMsg, err error) {
	body, _ := json.Marshal(request)
	req := &fasthttp.Request{}
	req.SetBody(body)
	req.SetRequestURI(p.host + fmt.Sprintf("/v1/test/%t/%s/%d/%d/%d/%d/%d/%d/%d/%d/%.0f/%d/%d/%.0f/%s/%s", request.BoolValue, request.EnumValue, request.Int32Value, request.Sint32Value, request.Uint32Value, request.Int64Value, request.Sint64Value, request.Uint64Value, request.Sfixed32Value, request.Fixed32Value, request.FloatValue, request.Sfixed64Value, request.Fixed64Value, request.DoubleValue, request.StringValue, request.BytesValue))
	req.Header.SetMethod("POST")
	reqResp := &fasthttp.Response{}
	if err = p.cl.Do(req, reqResp); err != nil {
		return nil, err
	}
	resp = &AllTypesMsg{}
	err = json.Unmarshal(reqResp.Body(), resp)
	return resp, err
}
